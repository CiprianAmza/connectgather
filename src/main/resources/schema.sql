-- Ordinea este importantă din cauza cheilor străine
-- Se șterg întâi tabelele care depind de altele

DROP TABLE IF EXISTS event_participants; -- Nou: pentru relația Many-to-Many
DROP TABLE IF EXISTS events;
DROP TABLE IF EXISTS locations;
DROP TABLE IF EXISTS participants;
DROP TABLE IF EXISTS authorities;
DROP TABLE IF EXISTS app_users;


-- Tabele pentru Spring Security
CREATE TABLE app_users (
    username VARCHAR(50) NOT NULL PRIMARY KEY,
    password VARCHAR(100) NOT NULL,
    enabled  BOOLEAN     NOT NULL
);

CREATE TABLE authorities (
    username  VARCHAR(50) NOT NULL,
    authority VARCHAR(50) NOT NULL,
    CONSTRAINT fk_authorities_users FOREIGN KEY (username) REFERENCES app_users (username)
);

CREATE UNIQUE INDEX ix_auth_username ON authorities (username, authority);

-- NOU: Tabel pentru Participanți
CREATE TABLE participants (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    phone VARCHAR(25) NOT NULL
);

-- NOU: Tabel pentru Locații
CREATE TABLE locations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL UNIQUE,
    address VARCHAR(255) NOT NULL,
    description VARCHAR(255)
);

-- MODIFICAT: Tabel pentru Evenimente (cu foreign keys către locations și participants)
CREATE TABLE events (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(1000),
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    location_id BIGINT NOT NULL,       -- Foreign Key către Location
    organizer_id BIGINT NOT NULL,      -- Foreign Key către Participant (organizator)
    CONSTRAINT fk_event_location FOREIGN KEY (location_id) REFERENCES locations (id),
    CONSTRAINT fk_event_organizer FOREIGN KEY (organizer_id) REFERENCES participants (id)
);

-- NOU: Tabel de joncțiune pentru relația Many-to-Many Event-Participant
-- Un eveniment poate avea mai mulți participanți, și un participant poate fi la mai multe evenimente
CREATE TABLE event_participants (
    event_id BIGINT NOT NULL,
    participant_id BIGINT NOT NULL,
    PRIMARY KEY (event_id, participant_id),
    CONSTRAINT fk_event_participants_event FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE,
    CONSTRAINT fk_event_participants_participant FOREIGN KEY (participant_id) REFERENCES participants (id) ON DELETE CASCADE
);

